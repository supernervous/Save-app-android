apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from : '../dependencies.gradle'
apply from : '../config.gradle'
apply plugin: 'org.jetbrains.kotlin.android'

def getDropboxKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("dropbox_key")
}

android {
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    signingConfigs {
    }

    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId "net.opendasharchive.openarchive"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        archivesBaseName = "Save-$versionName"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    flavorDimensions += "free"
    buildTypes {
        debug {
            buildConfigField "String", "dropbox_key", getDropboxKey()
            resValue 'string', "dropbox_key", getDropboxKey()
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "dropbox_key", getDropboxKey()
            resValue 'string', "dropbox_key", getDropboxKey()
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/LICENSE', 'META-INF/NOTICE', 'META-INF/DEPENDENCIES', 'LICENSE.txt']
        }
    }
    productFlavors {
        releaseflavor {
            dimension "free"
            applicationId 'net.opendasharchive.openarchive.release'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
    }

    namespace 'net.opendasharchive.openarchive'
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1"

    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation "androidx.work:work-runtime-ktx:2.9.0"

    implementation "com.github.satyan:sugar:1.5"

    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.dropbox.core:dropbox-core-sdk:5.4.4"

    // adding web dav support: https://github.com/thegrizzlylabs/sardine-android'
    implementation "com.github.guardianproject:sardine-android:89f7eae512"

    implementation "com.google.android.material:material:1.11.0"

    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"
    implementation "com.github.derlio:audio-waveform:v1.0.1"
    implementation "com.github.esafirm:android-image-picker:3.0.0"
    implementation "com.github.stfalcon:frescoimageviewer:0.5.0"
    implementation "com.facebook.fresco:fresco:2.6.0"
    implementation "com.squareup.picasso:picasso:2.5.2"

    implementation "com.amulyakhare:com.amulyakhare.textdrawable:1.0.1"
    implementation "com.github.abdularis:circularimageview:1.4"

    implementation "org.cleaninsights.sdk:clean-insights-sdk:2.8.0"
    implementation "info.guardianproject.netcipher:netcipher:2.2.0-alpha"

    //from here: https://github.com/guardianproject/proofmode
    implementation ("org.proofmode:android-libproofmode:1.0.26") {

        transitive = false

        exclude group: 'org.bitcoinj'
        exclude group: 'com.google.protobuf'
        exclude group: 'org.slf4j'
        exclude group: 'net.jcip'
        exclude group: 'commons-cli'
        exclude group: 'org.json'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.guava', module: 'guava-jdk5'
        exclude group: 'com.google.code.findbugs', module: 'annotations'
        exclude group: "com.squareup.okio", module: "okio"
    }

    implementation "com.google.guava:guava:31.0.1-android"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.72'
    implementation 'org.bouncycastle:bcprov-jdk15to18:1.72'
    api 'org.bouncycastle:bcpg-jdk15to18:1.71'

    implementation "com.tbuonomo:dotsindicator:5.0"
    implementation 'com.guolindev.permissionx:permissionx:1.6.4'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    // google drive api
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    implementation 'com.google.http-client:google-http-client-gson:1.42.1'
    implementation('com.google.api-client:google-api-client-android:1.26.0')
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0')

    // Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

/**
 testdroid {username '$bbusername'
 password '$bbpassword'
 deviceGroup 'gpdevices'
 mode "FULL_RUN"
 projectName "OASave"}**/

